<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('header') %>
  <script src="https://cdn.jsdelivr.net/npm/dompurify@3.1.3/dist/purify.min.js" integrity="sha256-ykUC1Oqnato0nykqa4dwQTqKTkewuLP2Rhu49YV/kYY=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js" integrity="sha256-WCzAhd2P6gRJF9Hv3oOOd+hFJi/QJbv+Azn4CGB8gfY=" crossorigin="anonymous"></script>
  <script src="js/donate.js"></script>
  <script>
      const EXPERIMENT_GROUP = <%- JSON.stringify(experimentGroup) %>;
      const DONATE_ERRORS = <%- JSON.stringify(donateErrors) %>;
      const languageCode = "<%= navigation.languageCode %>";
      window.onload = function() {
        const contextIds = <%- JSON.stringify(contexts.map(context => context.id)) %>;
        addDonateEventListeners('habit-input', 'submit', 'clear', contextIds, EXPERIMENT_GROUP, languageCode, grecaptcha);

    };
  </script>
  <style>
    .recaptcha-container {
      display: flex;
      justify-content: center;
      margin-top: 1em;
    }
    <% for (const context of contexts) { %>
      .mark_<%= context.id %> {
        background-color: <%= context.color %>;
        border-radius: 10px;
      }
    <% } %>
  </style>
</head>

<body>
  <%- include('nav', navigation) %>

  <!-- Introduction -->
  <% if (experimentGroup.closedDescription) { %>
  <div class="container" id="introduction">
    <div class="row">
      <div class="custom-square rounded position-relative">
        <h5 id="header"><%= header %></h5>
        <div class="row">
          <div class="col-md-12 text-justify">
            <p id="intro-text"><%- text %></p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <% } %>

  <!-- Datadonation guide -->
  <div class="container ml-5 mr-5" id="datadonationheader">
    <div class="row">
      <h5 id="header"><%= proceeding %></h5>
      <div class="col-12">
        <ul id="steps" style="list-style-type: decimal">
          <li><%= step1 %></li>
        <% if (experimentGroup.closedTask) { %>
          <li><%= step2 %></li>
        <% } %>
          <li><%= step3 %></li>
        </ul>
      </div>
    </div>
    <div class="row form-group">
      <div class="col-11 habit-input-container">
        <div contenteditable="true" class="form-control" id="habit-input"></div>
      </div>
      <div class="col-1 p-0 clear-container">
        <button id="clear"><%= clear %></button>
      </div>
    </div>
    <% if (experimentGroup.closedTask) { %>
      <div class="row mt-2">
        <div class="col-12" role="alert">
          <p id="example1"><%- example1 %></p>
        </div>
      </div>

      <div class="d-flex flex-wrap">
        <% for (const context of contexts) { %>
          <div class="m-1 flex-grow-1">
            <button
              class="btn context-btn mt-0 h-100"
              id="<%= context.id %>"
              style="
                --btn-color: <%= context.color %>;
                --btn-bg:    <%= context.color %>66;
              "
            >
              <%= context.labels[navigation.languageCode] %>
            </button>
          </div>
        <% } %>
      </div>
    <% } %>
  </div>

  <!-- Error messages -->
  <div id="error-messages" class="container" style="color: red; display: none;">
    <div class="row">
      <div class="col-12">
        <p id="error-text"></p>
      </div>
    </div>
  </div>

<!-- Form with reCAPTCHA -->
  <form action="<%= navigation.languageCode %>/donate/submit-form" method="POST">
 
  <div class="form-group mb-4">
    <div id="slider-outer-container">
      <label for="habitStrength" class="slider-label" style="font-weight:bold; font-size:1.1em; display:block; margin-bottom:1em;">
        <%= typeof habitStrengthLabel !== 'undefined' ? habitStrengthLabel : 'Wie sehr mÃ¶chtest du diese Gewohnheit beibehalten oder abstellen?' %>
      </label>
      <div id="slider-container"></div>
      <div id="slider-numbers"></div>
    </div>
    <input type="hidden" id="habitStrength" name="habitStrength" value="">
  </div>

  <div class="recaptcha-container">
     <%- recaptcha || '' %>
  </div>
  <div class="container mb-5">
    <div class="col-12">
      <button type="submit" class="button" id="submit"><h4><strong><%= submit || 'Absenden' %></strong></h4></button>
    </div>
  </div>
</form>


  <!-- Footer -->
  <%- include('footer') %>

<script>
  // todo: scale optional only 5 steps
  const scaleType = <%= typeof scaleType !== 'undefined' ? scaleType : 7 %>;
  const scales = {
    7: [
      { value: 1, label: "Unbedingt abstellen" },
      { value: 2, label: "Eher abstellen" },
      { value: 3, label: "Tendenziell abstellen" },
      { value: 4, label: "Neutral / Unentschieden" },
      { value: 5, label: "Tendenziell beibehalten" },
      { value: 6, label: "Eher beibehalten" },
      { value: 7, label: "Unbedingt beibehalten" }
    ],
    5: [
      { value: 1, label: "Unbedingt abstellen" },
      { value: 2, label: "Eher abstellen" },
      { value: 3, label: "Neutral / Unentschieden" },
      { value: 4, label: "Eher beibehalten" },
      { value: 5, label: "Unbedingt beibehalten" }
    ]
  };

function renderSlider(scale) {
  const outer = document.getElementById('slider-container');
  outer.innerHTML = '';

  const trackDiv = document.createElement('div');
  trackDiv.id = 'slider-track-container';

  const leftLabel = document.createElement('span');
  leftLabel.id = 'left-label';
  leftLabel.textContent = scale[0].label;

  const sliderWrapper = document.createElement('div');
  sliderWrapper.id = 'slider-inner-wrapper';
  sliderWrapper.style.position = 'relative';

  const slider = document.createElement('input');
  slider.type = 'range';
  slider.min = 1;
  slider.max = scale.length;
  slider.step = 1;
  slider.value = Math.ceil(scale.length / 2);
  slider.id = 'habitStrengthSlider';
  sliderWrapper.appendChild(slider);

  const numbersDiv = document.createElement('div');
  numbersDiv.id = 'slider-numbers';
  for (let i = 1; i <= scale.length; i++) {
    const num = document.createElement('span');
    num.textContent = i;
    numbersDiv.appendChild(num);
  }
  sliderWrapper.appendChild(numbersDiv);

  const rightLabel = document.createElement('span');
  rightLabel.id = 'right-label';
  rightLabel.textContent = scale[scale.length - 1].label;

  trackDiv.append(leftLabel, sliderWrapper, rightLabel);
  outer.appendChild(trackDiv);

  const currentLabel = document.createElement('div');
  currentLabel.id = 'current-label';
  currentLabel.textContent = scale[slider.value - 1].label;
  outer.appendChild(currentLabel);

  slider.addEventListener('input', () => {
    document.getElementById('habitStrength').value = slider.value;
    currentLabel.textContent = scale[slider.value - 1].label;
  });
  document.getElementById('habitStrength').value = slider.value;
}

  renderSlider(scales[scaleType]);
</script>
  
</body>
</html>
